{"version":3,"sources":["styles/pageStyles.module.css","Components/Page.jsx","App.js","index.js"],"names":["module","exports","Page","useState","value","setValue","query","gql","length","data","useQuery","className","style","form","action","input","onChange","event","target","name","type","placeholder","undefined","title","list","launches","map","launch","listItem","key","shortid","generate","mission_name","launch_date_utc","launch_site","site_name_long","links","flickr_images","url","listItemImg","src","alt","rocket","rocket_name","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,KAAO,yBAAyB,SAAW,6BAA6B,YAAc,kC,kfCK5M,IAwEeC,EAxEF,WAAO,IAAD,EACWC,mBAAU,IADrB,mBACRC,EADQ,KACDC,EADC,KAETC,EAAQC,cAAH,IAEsC,IAAjBH,EAAMI,OAAeJ,EAAQ,MAerDK,EAASC,mBAAUJ,GAAnBG,KACR,OACI,6BACI,0BACIE,UAAWC,IAAMC,KACjBC,OAAO,UACP,2BACIH,UAAWC,IAAMG,MACjBC,SAAU,SAAAC,GAAK,OAAIZ,EAAUY,EAAMC,OAAOd,QAC1CA,MAAOA,EACPe,KAAK,aACLC,KAAK,OACLC,YAAY,wBAKPC,IAATb,GACA,6BACI,wBAAIE,UAAWC,IAAMW,OAArB,gBACA,wBAAIZ,UAAWC,IAAMY,MAEbf,EAAKgB,SAASC,KAAK,SAAAC,GACf,OACI,wBACIhB,UAAWC,IAAMgB,SACjBC,IAAKC,IAAQC,YACb,2BAAIJ,EAAOK,cACX,2BAAIL,EAAOM,iBACX,2BAAIN,EAAOO,YAAYC,gBAEnBR,EAAOS,MAAMC,cAAc7B,OAASmB,EAAOS,MAAMC,cAAcX,KAAK,SAAAY,GAChE,OACI,yBACI3B,UAAWC,IAAM2B,YACjBV,IAAKC,IAAQC,WACbS,IAAKF,EACLG,IAAI,QAGV,2DAEV,2BAAId,EAAOe,OAAOC,qBCvD3CC,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCFAC,EAAS,IAAIC,eAAc,CAC/BC,IAAK,kCACLC,MAAO,IAAIC,kBAGbC,IAASC,OACP,kBAAC,iBAAD,CAAgBN,OAAQA,GACtB,kBAAC,EAAD,OAEAO,SAASC,eAAgB,W","file":"static/js/main.a0c58612.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"pageStyles_form__2Vc9X\",\"input\":\"pageStyles_input__2ifHe\",\"title\":\"pageStyles_title__2Qpj8\",\"list\":\"pageStyles_list__2wG7Y\",\"listItem\":\"pageStyles_listItem__3RlHK\",\"listItemImg\":\"pageStyles_listItemImg__1f_ja\"};","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from '@apollo/client';\r\nimport shortid from 'shortid';\r\nimport style from '../styles/pageStyles.module.css';\r\n\r\nconst Page = () => {\r\n    const [value, setValue] = useState( '' );\r\n    const query = gql`\r\n{\r\n    launches(find: {launch_year: \"${value.length === 4 ? value : null}\"}) {\r\n      mission_name\r\n      launch_date_utc\r\n      launch_site {\r\n        site_name_long\r\n      }\r\n      rocket {\r\n        rocket_name\r\n      }\r\n      links {\r\n        flickr_images\r\n      }\r\n    }\r\n  }\r\n`\r\n    const { data } = useQuery( query );\r\n    return (\r\n        <div>\r\n            <form\r\n                className={style.form}\r\n                action=\"submit\">\r\n                <input\r\n                    className={style.input}\r\n                    onChange={event => setValue( event.target.value )}\r\n                    value={value}\r\n                    name='inputValue'\r\n                    type=\"text\"\r\n                    placeholder=\"Enter year...\"\r\n                />\r\n\r\n            </form>\r\n            {\r\n                data !== undefined &&\r\n                < div >\r\n                    <h2 className={style.title}>Space-x info</h2>\r\n                    <ul className={style.list}>\r\n                        {\r\n                            data.launches.map( launch => {\r\n                                return (\r\n                                    <li\r\n                                        className={style.listItem}\r\n                                        key={shortid.generate()}>\r\n                                        <p>{launch.mission_name}</p>\r\n                                        <p>{launch.launch_date_utc}</p>\r\n                                        <p>{launch.launch_site.site_name_long}</p>\r\n                                        {\r\n                                            launch.links.flickr_images.length ? launch.links.flickr_images.map( url => {\r\n                                                return (\r\n                                                    <img\r\n                                                        className={style.listItemImg}\r\n                                                        key={shortid.generate()}\r\n                                                        src={url}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                )\r\n                                            } ) : <p>Sorry we cant find any photo</p>\r\n                                        }\r\n                                        <p>{launch.rocket.rocket_name}</p>\r\n                                    </li>\r\n                                )\r\n                            } )}\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page;\r\n\r\n","import React from 'react';\nimport Page from './Components/Page';\n\n\nfunction App () {\n  return (\n    <>\n      <Page />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient( {\n  uri: 'https://api.spacex.land/graphql',\n  cache: new InMemoryCache()\n} );\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider >\n  , document.getElementById( 'root' )\n);\n\n"],"sourceRoot":""}